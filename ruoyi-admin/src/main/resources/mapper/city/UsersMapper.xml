<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.city.mapper.UsersMapper">
    
    <resultMap type="Users" id="UsersResult">
        <result property="id"    column="id"    />
        <result property="username"    column="username"    />
        <result property="password"    column="password"    />
        <result property="role"    column="role"    />
        <result property="phone"    column="phone"    />
        <result property="status"    column="status"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="roleDisplayName" column="role_display_name"/>
    </resultMap>

    <sql id="selectUsersVo">
        SELECT
        u.id, u.username, u.password, u.role, u.phone, u.status, u.create_time, u.update_time,
        r.display_name AS role_display_name
        FROM users u
        LEFT JOIN roles r ON u.role = r.name
    </sql>

    <select id="selectUsersList" parameterType="Users" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        <where>  
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="role != null  and role != ''"> and role = #{role}</if>
            <if test="phone != null  and phone != ''"> and phone = #{phone}</if>
            <if test="status != null "> and status = #{status}</if>
        </where>
    </select>

    <select id="selectUsersById" parameterType="Long" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        WHERE u.id = #{id}
    </select>

    <select id="selectUserByUsername" parameterType="String" resultMap="UsersResult">
        <include refid="selectUsersVo"/>
        WHERE username = #{username}
    </select>

    <insert id="insertUsers" parameterType="Users" useGeneratedKeys="true" keyProperty="id">
        insert into users
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">username,</if>
            <if test="password != null and password != ''">password,</if>
            <if test="role != null">role,</if>
            <if test="phone != null">phone,</if>
            <if test="status != null">status,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="username != null and username != ''">#{username},</if>
            <if test="password != null and password != ''">#{password},</if>
            <if test="role != null">#{role},</if>
            <if test="phone != null">#{phone},</if>
            <if test="status != null">#{status},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateUsers" parameterType="Users">
        update users
        <trim prefix="SET" suffixOverrides=",">
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="role != null">role = #{role},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteUsersById" parameterType="Long">
        delete from users where id = #{id}
    </delete>

    <delete id="deleteUsersByIds" parameterType="String">
        delete from users where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>